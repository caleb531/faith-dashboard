// Color (non-photo) themes
$theme-colors: (
  'brown': 'brown',
  'green': 'green',
  'teal': 'teal',
  'blue': 'blue',
  'purple': 'purple',
  'royal': 'royal',
  'rose': 'rose',
  'red': 'red',
  'orange': 'orange',
  'yellow': 'yellow',
  'violet': 'violet'
);

// Store available photo themes in a map, where the key is the ID of the photo
// theme, and the value is an accent color used for things like buttons,
// controls, etc.
$theme-photos: (
  'word': 'teal',
  'worship': 'orange',
  'pasture': 'green',
  'mountain': 'slate',
  'shore': 'teal',
  'stars': 'royal',
  'evening': 'violet',
  'forest': 'forest'
);

// Dynamically define CSS variables / custom properties using Sass variable
// interpolation
@each $theme-name, $theme-color in join($theme-colors, $theme-photos) {
  .theme-#{$theme-name} {
    --current-theme-color: var(--color-#{$theme-color});
    --current-theme-color-dark: var(--color-#{$theme-color}-dark);
  }
}

// Set <body> background as solid color for color themes
.color-theme {
  background-color: var(--current-theme-color);
}

@each $theme-name, $theme-color in $theme-photos {
  .photo-theme.theme-#{$theme-name} {
    --photo-theme-background-url: url('../../public/images/background-photos/#{$theme-name}.jpg');
  }
}

// Since iOS does not support background-attachment:fixed, we must add a
// pseudo-element on the <body> and add the background-image to that
.photo-theme:before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  z-index: -1;
  width: 100%;
  height: 100%;
  background-color: var(--color-grey);
  background-image: var(--photo-theme-background-url);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center top;
}

// Theme-specific adjustments
.theme-mountain:before {
  background-position: center center;
}
.theme-evening:before {
  background-position: bottom 0 center;
}
